msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: pgroonga_vacuum function\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: pgroonga_vacuum関数\n"
"upper_level: ../\n"
"---"

msgid "# `pgroonga_vacuum` function"
msgstr "# `pgroonga_vacuum`関数"

msgid "Since 2.1.7."
msgstr "2.1.7で追加。"

msgid "## Summary"
msgstr "## 概要"

msgid ""
"`pgroonga_vacuum` function removes internal unused Groonga tables, columns and"
" records. Note that it's not for PGroonga. It's for Groonga. Normally, you don"
"'t need to call this function because PGroonga does the same process on `VACUU"
"M`."
msgstr ""
"`pgroonga_vacuum`関数は内部的に不要になったGroongaのテーブル・カラム・レコードを削除します。PGroongaのものではなくGroon"
"gaのものであることに注意してください。通常、この関数を呼ぶ必要はありません。 なぜなら`VACUUM`時に同等の処理を実行するからです。"

msgid "You need to call this function one of the following situations:"
msgstr "次のケースのときはこの関数を呼ぶ必要があります。"

msgid ""
"  * You remove all PGroonga indexes. If you don't have any PGroonga index, PGr"
"oonga can't run the same process on `VACUUM`."
msgstr "  * すべてのPGroongaのインデックスを削除したとき。PGroongaのインデックスがないと`VACUUM`時に同等の処理を実行できません。"

msgid ""
"  * You use streaming replication. You need to call this function only on slav"
"es because `VACUUM` isn't run on slaves."
msgstr ""
"  * ストリーミングレプリケーションを使っているとき。スレーブ上でだけこの関数を実行する必要があります。なぜなら、スレーブでは`VACUUM`が実行されな"
"いからです。"

msgid "## Syntax"
msgstr "## 構文"

msgid "Here is the syntax of this function:"
msgstr "この関数の構文は次の通りです。"

msgid ""
"```text\n"
"bool pgroonga_vacuum()\n"
"```"
msgstr ""

msgid ""
"It always returns `true`. If there is a problem in processing, an error is rai"
"sed."
msgstr "常に`true`を返します。処理中に問題があった場合は、エラーが発生します。"

msgid "## Usage"
msgstr "## 使い方"

msgid "Here are sample schema:"
msgstr "以下はサンプルスキーマです。"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_index ON memos USING PGroonga (content);\n"
"```"
msgstr ""

msgid ""
"You keep the current internal Groonga table name. `\\gset` and `\\echo` are `psq"
"l`'s meta commands:"
msgstr "現在の内部的に使っているGroongaのテーブル名を保存します。`\\gset`と`\\echo`は`psql`のメタコマンドです。"

msgid ""
"```sql\n"
"SELECT pgroonga_table_name('pgroonga_index')\n"
"\\gset old_\n"
"\\echo :old_pgroonga_table_name\n"
"-- Sources17058\n"
"```"
msgstr ""

msgid "The current internal Groonga table is changed after `REINDEX`:"
msgstr "`REINDEX`を実行すると現在の内部的なGroongaのテーブルが変わります。"

msgid ""
"```sql\n"
"REINDEX INDEX pgroonga_index;\n"
"SELECT pgroonga_table_name('pgroonga_index');\n"
"--  pgroonga_table_name \n"
"-- ---------------------\n"
"--  Sources17059\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid "The old internal Groonga table exists until `VACUUM`:"
msgstr "`VACUUM`を実行するまでは古い内部的なGroongaのテーブルはまだ存在します。"

msgid ""
"```sql\n"
"SELECT pgroonga_command('object_exist',\n"
"                        ARRAY[\n"
"                          'name', :'old_pgroonga_table_name'\n"
"                        ])::json->>1;\n"
"--  ?column? \n"
"-- ----------\n"
"--  true\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid "You can remove the old internal Groonga table by `pgroonga_vacuum()`:"
msgstr "`pgroonga_vacuum()`を呼ぶと古い内部的なGroongaのテーブルを削除できます。"

msgid ""
"```sql\n"
"SELECT pgroonga_vacuum();\n"
"--  pgroonga_vacuum \n"
"-- -----------------\n"
"--  t\n"
"-- (1 row)\n"
"SELECT pgroonga_command('object_exist',\n"
"                        ARRAY[\n"
"                          'name', :'old_pgroonga_table_name'\n"
"                        ])::json->>1;\n"
"--  ?column? \n"
"-- ----------\n"
"--  false\n"
"-- (1 row)\n"
"```"
msgstr ""
